name: Deploy Core Service

on:
  push:
    branches:
      - main
      - develop

env:
  IMAGE_NAME: lucassuntech/core-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build e Push da Imagem
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            TAG="latest"
          else
            TAG="develop"
          fi

          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:

      # 1) PASSO DE DEBUG (PROD)
      - name: Debug k8s folder (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Listando conte√∫do de k8s (production):"
          ls -R k8s
          echo "Mostrando deployment.yaml se existir:"
          cat k8s/prod/core-service/deployment.yaml || echo "deployment.yaml n√£o encontrado"

      # 2) COPIAR MANIFESTOS (PROD)
      - name: Copiar manifestos (Produ√ß√£o)
        if: github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "k8s/prod/core-service"
          target: "/home/devops/k8s/core/prod"
          overwrite: true

      # 3) PASSO DE DEBUG (HOMOLOG)
      - name: Debug k8s folder (Homolog)
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Listando conte√∫do de k8s (homolog):"
          ls -R k8s
          echo "Mostrando deployment.yaml se existir:"
          cat k8s/homolog/core-service/deployment.yaml || echo "deployment.yaml n√£o encontrado"

      # 4) COPIAR MANIFESTOS (HOMOLOG)
      - name: Copiar manifestos (Homolog)
        if: github.ref == 'refs/heads/develop'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "k8s/homolog/core-service"
          target: "/home/devops/k8s/core/homolog"
          overwrite: true

      # 5) APLICAR DEPLOY
      - name: Aplicar Deploy no K3s
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            export KUBECONFIG=/home/devops/.kube/config

            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "üöÄ Deploy em Produ√ß√£o"
              cd /home/devops/k8s/core/prod/core-service
              kubectl apply -f deployment.yaml
              kubectl apply -f service.yaml
              kubectl apply -f ingressroute.yaml
              kubectl rollout restart deployment core-deployment -n core-prod

            elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
              echo "üöÄ Deploy em Homolog"
              cd /home/devops/k8s/core/homolog/core-service
              kubectl apply -f deployment.yaml
              kubectl apply -f service.yaml
              kubectl apply -f ingressroute.yaml
              kubectl rollout restart deployment core-deployment -n core-homolog
            else
              echo "Nenhum deploy aplicado pois branch n√£o √© main ou develop."
            fi
