# .github/workflows/deploy-core-service.yml
name: Deploy Core-Service Production (K3s)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: lucassuntech/core-service
  NAMESPACE: core-prod
  DEPLOYMENT: core-service   # certifique-se de que bate com metadata.name em deployment.yaml

jobs:
  build-and-deploy:
    name: Build, Push & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositÃ³rio
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build e Push da imagem
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

      - name: Deploy no K3s via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ci-deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "ðŸ”— Conectando Ã  VPS..."
            export KUBECONFIG=/home/ci-deploy/.kube/config

            cd /home/ci-deploy/k8s/core-service/prod

            echo "ðŸ“‹ Atualizando Deployment com a nova imagem..."
            kubectl set image deployment/$DEPLOYMENT \
              core-service=$IMAGE_NAME:latest \
              -n $NAMESPACE

            echo "ðŸ”„ Garantindo pullPolicy=Always..."
            kubectl patch deployment $DEPLOYMENT \
              -n $NAMESPACE \
              --type=json \
              -p='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Always"}]'

            echo "ðŸ”„ Rolando o rollout e aguardando..."
            kubectl rollout status deployment/$DEPLOYMENT \
              -n $NAMESPACE \
              --timeout=120s

            echo "âœ… Deploy concluÃ­do!"
