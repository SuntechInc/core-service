# .github/workflows/deploy-core-service.yaml
name: Deploy Core-Service Production (K3s)

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: lucassuntech/core-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout do c√≥digo
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Login no Docker Hub
      - name: Login no Docker Hub
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
            | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 3Ô∏è‚É£ Build & Push da Imagem
      - name: Build e Push da imagem para Produ√ß√£o
        run: |
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest

      # 4Ô∏è‚É£ Deploy no K3s via SSH
      - name: Deploy no K3s
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ci-deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo "üîó Conectando √† VPS..."
            export KUBECONFIG=/home/ci-deploy/.kube/config

            echo "üìã Indo para o diret√≥rio k8s/core-service/prod"
            cd /home/ci-deploy/k8s/core-service/prod

            echo "üìã Aplicando YAMLs..."
            kubectl apply -f deployment.yaml -n core-prod
            kubectl apply -f service.yaml    -n core-prod
            kubectl apply -f ingressroute.yaml -n core-prod

            echo "üîÑ Atualizando a imagem no Deployment e garantindo pullPolicy=Always..."
            kubectl set image deployment/core-service \
              core-service=$IMAGE_NAME:latest \
              -n core-prod \
              --record

            kubectl patch deployment core-service \
              -n core-prod \
              --type=json \
              -p='[{"op":"replace","path":"/spec/template/spec/containers/0/imagePullPolicy","value":"Always"}]'

            echo "üîÑ Rolando o rollout e aguardando conclus√£o..."
            kubectl rollout status deployment/core-service \
              -n core-prod \
              --timeout=120s

            echo "‚úÖ Deploy conclu√≠do!"
