name: Deploy Dev

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build & Push Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/core-service:dev .
          docker push ${{ secrets.DOCKER_USERNAME }}/core-service:dev

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}

          env:
            DATABASE_URL_DEV: ${{ secrets.DATABASE_URL_DEV }}

          script: |
            # 1) Docker pull
            docker pull ${{ secrets.DOCKER_USERNAME }}/core-service:dev

            # 2) Para e remove container antigo
            if [ "$(docker ps -q -f name=core_service_dev)" ]; then
              docker stop core_service_dev
              docker rm core_service_dev
            fi

            # 3) Rodar migrations
            export DATABASE_URL="$DATABASE_URL_DEV"
            docker run --rm \
              --network=projects_default \
              -e DATABASE_URL="$DATABASE_URL" \
              ${{ secrets.DOCKER_USERNAME }}/core-service:dev \
              npx prisma migrate deploy

            # 4) Subir container dev
            docker run -d \
              --network=projects_default \
              -e DATABASE_URL="$DATABASE_URL" \
              --name core_service_dev \
              -p 3333:3334 \
              ${{ secrets.DOCKER_USERNAME }}/core-service:dev
