name: Deploy Staging

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy-staging:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build & Push Docker
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/core-service:staging .
          docker push ${{ secrets.DOCKER_USERNAME }}/core-service:staging

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}

          env:
            DATABASE_URL_HOMOLOG: ${{ secrets.DATABASE_URL_HOMOLOG }}

          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/core-service:staging

            if [ "$(docker ps -q -f name=core_service_staging)" ]; then
              docker stop core_service_staging
              docker rm core_service_staging
            fi

            export DATABASE_URL="$DATABASE_URL_HOMOLOG"
            docker run --rm \
              --network=projects_default \
              -e DATABASE_URL="$DATABASE_URL" \
              ${{ secrets.DOCKER_USERNAME }}/core-service:staging \
              npx prisma migrate deploy

            docker run -d \
              --network=projects_default \
              -e DATABASE_URL="$DATABASE_URL" \
              --name core_service_staging \
              -p 3335:3334 \
              ${{ secrets.DOCKER_USERNAME }}/core-service:staging
