// model JobTitle {
//   id         String   @id @default(cuid())                @map("id_job_title")
//   companyId  String  @map("id_company")                 
//   name       String   @map("job_title_name")
//   code       String?  @map("job_title_code")
//   createdAt  DateTime @default(now())                     @map("created_at")
//   versions   JobTitleVersion[]

//   // Relações
//   branch     Branch   @relation(fields: [branchId], references: [id])
//   branchId   String   @map("id_branch")

//   @@unique([companyId, name])
//   @@map("job_titles")
// }

// model JobTitleVersion {
//   id                String   @id @default(cuid()) @map("id_job_title_version")
//   jobTitleId        String   @map("id_job_title")
//   version           Int      @map("version")
//   description       String?  @db.Text @map("description")
//   responsibilities  String?  @db.Text @map("responsibilities")
//   requirements      String?  @db.Text @map("requirements")
//   createdAt         DateTime @default(now()) @map("created_at")
//   updatedAt         DateTime @updatedAt @map("updated_at")

//   // Relations
//   jobTitle          JobTitle @relation(fields: [jobTitleId], references: [id], onDelete: Cascade)
//   jobTitleLevels    JobTitleLevel[]
//   jobTitleHistory   EmployeeJobTitleHistory[]
//   currentEmployees  Employee[]  // Relação inversa para Employee.currentJobTitleVersion

//   @@index([jobTitleId, version])
//   @@unique([jobTitleId, version])
//   @@map("job_title_versions")
// }

// model EmployeeJobTitleHistory {
//   employeeId          String  @map("id_employee")
//   jobTitleVersionId   String  @map("id_job_title_version")
//   assignedAt          DateTime @default(now())            @map("assigned_at")
//   removedAt           DateTime?                           @map("removed_at")

//   employee            Employee        @relation(fields: [employeeId], references: [id])
//   jobTitleVersion     JobTitleVersion @relation(fields: [jobTitleVersionId], references: [id])

//   @@id([employeeId, jobTitleVersionId, assignedAt])
//   @@map("employee_job_title_history")
// }

// model JobTitleLevel {
//   id                String   @id @default(cuid()) @map("id_job_title_level")
//   jobTitleVersionId String   @map("id_job_title_version")
//   label             String   @db.VarChar(60) @map("label")  // "Júnior", "Pleno", "Sênior"…
//   rank              Int?     @map("rank")                    // opcional: 1, 2, 3 (para ordenar)
//   salaryMin         Decimal? @db.Decimal(12,2) @map("salary_min")
//   salaryMax         Decimal? @db.Decimal(12,2) @map("salary_max")
//   createdAt         DateTime @default(now()) @map("created_at")
//   updatedAt         DateTime @updatedAt @map("updated_at")

//   // Relations
//   jobTitleVersion   JobTitleVersion @relation(fields: [jobTitleVersionId], references: [id], onDelete: Cascade)

//   @@index([jobTitleVersionId, label])
//   @@unique([jobTitleVersionId, label])  // não repete "Pleno" na mesma versão
//   @@map("job_title_levels")
// }
